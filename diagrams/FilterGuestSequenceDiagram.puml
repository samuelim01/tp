@startuml
!include style.puml


box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":GuestCommandParser" as GuestCommandParser LOGIC_COLOR
participant ":GuestFilterCommandParser" as GuestFilterCommandParser LOGIC_COLOR
participant ":GuestFilterCommand" as GuestFilterCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":XYZPredicate" as XYZPredicate MODEL_COLOR
participant ":ModelManager" as ModelManager MODEL_COLOR
end box

note left LogicManager
input is "guest filter n/John r/yes"
end note
[-> LogicManager: execute(input)
activate LogicManager

LogicManager -> AddressBookParser : parseCommand(input)
activate AddressBookParser

create GuestCommandParser
AddressBookParser -> GuestCommandParser
activate GuestCommandParser

create GuestFilterCommandParser
GuestCommandParser -> GuestFilterCommandParser
activate GuestFilterCommandParser
group ref [create list of predicates]
    GuestFilterCommandParser -[hidden]> XYZPredicate
end

create GuestFilterCommand
GuestFilterCommandParser -> GuestFilterCommand : GuestFilterCommand(predicates)
activate GuestFilterCommand

GuestFilterCommand --> GuestFilterCommandParser
deactivate GuestFilterCommand

GuestFilterCommandParser --> GuestCommandParser : f
deactivate GuestCommandParser

GuestCommandParser --> AddressBookParser : f
deactivate GuestCommandParser

AddressBookParser --> LogicManager : f
deactivate AddressBookParser

LogicManager -> GuestFilterCommand : execute()
activate GuestFilterCommand

GuestFilterCommand -> ModelManager : updateFilteredGuestList(Predicate<Guest>)
activate ModelManager

ModelManager --> GuestFilterCommand
deactivate ModelManager

create CommandResult
GuestFilterCommand -> CommandResult
activate CommandResult

CommandResult --> GuestFilterCommand
deactivate CommandResult

GuestFilterCommand --> LogicManager : r
deactivate GuestFilterCommand

[<-- LogicManager : r
deactivate LogicManager

@enduml
